// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tooth.proto

/*
Package toothapi is a generated protocol buffer package.

It is generated from these files:
	tooth.proto

It has these top-level messages:
	ByteRange
	WriteRequest
	WriteResponse
	ReadRequest
	ReadResponse
	ListChunksRequest
	ListChunksResponse
	CreateChunkRequest
	CreateChunkResponse
*/
package toothapi

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ByteRange struct {
	StartByte uint64 `protobuf:"varint,1,opt,name=start_byte,json=startByte" json:"start_byte,omitempty"`
	EndByte   uint64 `protobuf:"varint,2,opt,name=end_byte,json=endByte" json:"end_byte,omitempty"`
}

func (m *ByteRange) Reset()                    { *m = ByteRange{} }
func (m *ByteRange) String() string            { return proto.CompactTextString(m) }
func (*ByteRange) ProtoMessage()               {}
func (*ByteRange) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ByteRange) GetStartByte() uint64 {
	if m != nil {
		return m.StartByte
	}
	return 0
}

func (m *ByteRange) GetEndByte() uint64 {
	if m != nil {
		return m.EndByte
	}
	return 0
}

type WriteRequest struct {
	ChunkHandle uint64     `protobuf:"varint,1,opt,name=chunk_handle,json=chunkHandle" json:"chunk_handle,omitempty"`
	ByteRange   *ByteRange `protobuf:"bytes,2,opt,name=byte_range,json=byteRange" json:"byte_range,omitempty"`
}

func (m *WriteRequest) Reset()                    { *m = WriteRequest{} }
func (m *WriteRequest) String() string            { return proto.CompactTextString(m) }
func (*WriteRequest) ProtoMessage()               {}
func (*WriteRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *WriteRequest) GetChunkHandle() uint64 {
	if m != nil {
		return m.ChunkHandle
	}
	return 0
}

func (m *WriteRequest) GetByteRange() *ByteRange {
	if m != nil {
		return m.ByteRange
	}
	return nil
}

type WriteResponse struct {
	Ok bool `protobuf:"varint,1,opt,name=ok" json:"ok,omitempty"`
}

func (m *WriteResponse) Reset()                    { *m = WriteResponse{} }
func (m *WriteResponse) String() string            { return proto.CompactTextString(m) }
func (*WriteResponse) ProtoMessage()               {}
func (*WriteResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *WriteResponse) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

type ReadRequest struct {
	ChunkHandle uint64     `protobuf:"varint,1,opt,name=chunk_handle,json=chunkHandle" json:"chunk_handle,omitempty"`
	ByteRange   *ByteRange `protobuf:"bytes,2,opt,name=byte_range,json=byteRange" json:"byte_range,omitempty"`
}

func (m *ReadRequest) Reset()                    { *m = ReadRequest{} }
func (m *ReadRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadRequest) ProtoMessage()               {}
func (*ReadRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ReadRequest) GetChunkHandle() uint64 {
	if m != nil {
		return m.ChunkHandle
	}
	return 0
}

func (m *ReadRequest) GetByteRange() *ByteRange {
	if m != nil {
		return m.ByteRange
	}
	return nil
}

type ReadResponse struct {
	Datum [][]byte `protobuf:"bytes,1,rep,name=datum,proto3" json:"datum,omitempty"`
}

func (m *ReadResponse) Reset()                    { *m = ReadResponse{} }
func (m *ReadResponse) String() string            { return proto.CompactTextString(m) }
func (*ReadResponse) ProtoMessage()               {}
func (*ReadResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ReadResponse) GetDatum() [][]byte {
	if m != nil {
		return m.Datum
	}
	return nil
}

type ListChunksRequest struct {
}

func (m *ListChunksRequest) Reset()                    { *m = ListChunksRequest{} }
func (m *ListChunksRequest) String() string            { return proto.CompactTextString(m) }
func (*ListChunksRequest) ProtoMessage()               {}
func (*ListChunksRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

type ListChunksResponse struct {
	Chunks []uint64 `protobuf:"varint,1,rep,packed,name=chunks" json:"chunks,omitempty"`
}

func (m *ListChunksResponse) Reset()                    { *m = ListChunksResponse{} }
func (m *ListChunksResponse) String() string            { return proto.CompactTextString(m) }
func (*ListChunksResponse) ProtoMessage()               {}
func (*ListChunksResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *ListChunksResponse) GetChunks() []uint64 {
	if m != nil {
		return m.Chunks
	}
	return nil
}

type CreateChunkRequest struct {
	Chunk uint64 `protobuf:"varint,1,opt,name=chunk" json:"chunk,omitempty"`
}

func (m *CreateChunkRequest) Reset()                    { *m = CreateChunkRequest{} }
func (m *CreateChunkRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateChunkRequest) ProtoMessage()               {}
func (*CreateChunkRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *CreateChunkRequest) GetChunk() uint64 {
	if m != nil {
		return m.Chunk
	}
	return 0
}

type CreateChunkResponse struct {
}

func (m *CreateChunkResponse) Reset()                    { *m = CreateChunkResponse{} }
func (m *CreateChunkResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateChunkResponse) ProtoMessage()               {}
func (*CreateChunkResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func init() {
	proto.RegisterType((*ByteRange)(nil), "toothapi.ByteRange")
	proto.RegisterType((*WriteRequest)(nil), "toothapi.WriteRequest")
	proto.RegisterType((*WriteResponse)(nil), "toothapi.WriteResponse")
	proto.RegisterType((*ReadRequest)(nil), "toothapi.ReadRequest")
	proto.RegisterType((*ReadResponse)(nil), "toothapi.ReadResponse")
	proto.RegisterType((*ListChunksRequest)(nil), "toothapi.ListChunksRequest")
	proto.RegisterType((*ListChunksResponse)(nil), "toothapi.ListChunksResponse")
	proto.RegisterType((*CreateChunkRequest)(nil), "toothapi.CreateChunkRequest")
	proto.RegisterType((*CreateChunkResponse)(nil), "toothapi.CreateChunkResponse")
}

func init() { proto.RegisterFile("tooth.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 363 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x53, 0x4d, 0x4f, 0xe3, 0x30,
	0x14, 0x54, 0xb3, 0x6d, 0x37, 0x9d, 0x64, 0x57, 0x5a, 0xf7, 0x63, 0x4b, 0xa0, 0xa2, 0x58, 0x1c,
	0x2a, 0x84, 0x7a, 0x28, 0x42, 0xe2, 0x0a, 0x15, 0xe2, 0x43, 0x1c, 0x90, 0x85, 0xc4, 0xb1, 0x72,
	0x89, 0x45, 0xab, 0x42, 0x5c, 0x62, 0xf7, 0xd0, 0x7f, 0xc1, 0x4f, 0x46, 0x76, 0x1c, 0x12, 0x28,
	0x1c, 0xb9, 0xe5, 0xcd, 0x4c, 0xe6, 0xcd, 0xbc, 0x28, 0x08, 0xb4, 0x94, 0x7a, 0x36, 0x5c, 0xa6,
	0x52, 0x4b, 0xe2, 0xdb, 0x81, 0x2f, 0xe7, 0xf4, 0x1c, 0x8d, 0xb3, 0xb5, 0x16, 0x8c, 0x27, 0x8f,
	0x82, 0xf4, 0x00, 0xa5, 0x79, 0xaa, 0x27, 0xd3, 0xb5, 0x16, 0xdd, 0x4a, 0xbf, 0x32, 0xa8, 0xb2,
	0x86, 0x45, 0x8c, 0x86, 0x6c, 0xc1, 0x17, 0x49, 0x9c, 0x91, 0x9e, 0x25, 0x7f, 0x8b, 0x24, 0x36,
	0x14, 0x15, 0x08, 0xef, 0xd3, 0xb9, 0x16, 0x4c, 0xbc, 0xac, 0x84, 0xd2, 0x64, 0x0f, 0xe1, 0xc3,
	0x6c, 0x95, 0x2c, 0x26, 0x33, 0x9e, 0xc4, 0x4f, 0xb9, 0x57, 0x60, 0xb1, 0x4b, 0x0b, 0x91, 0x11,
	0x60, 0x9c, 0x26, 0xa9, 0x59, 0x6d, 0xfd, 0x82, 0x51, 0x73, 0x98, 0x07, 0x1b, 0xbe, 0xa7, 0x62,
	0x8d, 0x69, 0xfe, 0x48, 0x77, 0xf1, 0xc7, 0xad, 0x51, 0x4b, 0x99, 0x28, 0x41, 0xfe, 0xc2, 0x93,
	0x0b, 0xeb, 0xee, 0x33, 0x4f, 0x2e, 0x68, 0x8c, 0x80, 0x09, 0x1e, 0xff, 0x70, 0x8c, 0x7d, 0x84,
	0xd9, 0x16, 0x97, 0xa2, 0x85, 0x5a, 0xcc, 0xf5, 0xea, 0xb9, 0x5b, 0xe9, 0xff, 0x1a, 0x84, 0x2c,
	0x1b, 0x68, 0x13, 0xff, 0x6e, 0xe6, 0x4a, 0x8f, 0xcd, 0x32, 0xe5, 0x12, 0xd1, 0x43, 0x90, 0x32,
	0xe8, 0x0c, 0x3a, 0xa8, 0xdb, 0x4c, 0xca, 0x3a, 0x54, 0x99, 0x9b, 0xe8, 0x01, 0xc8, 0x38, 0x15,
	0x5c, 0x0b, 0xab, 0xcf, 0x5b, 0xb5, 0x50, 0xb3, 0xbc, 0xab, 0x93, 0x0d, 0xb4, 0x8d, 0xe6, 0x07,
	0x6d, 0x66, 0x3d, 0x7a, 0xf5, 0xe0, 0xdf, 0x99, 0x36, 0xa7, 0xb7, 0x57, 0xe4, 0x04, 0x35, 0x7b,
	0x3f, 0xd2, 0x29, 0x1a, 0x96, 0xbf, 0x5b, 0xf4, 0x7f, 0x03, 0x77, 0x09, 0x8f, 0x51, 0x35, 0x95,
	0x49, 0xbb, 0x10, 0x94, 0x0e, 0x1d, 0x75, 0x3e, 0xc3, 0xee, 0xb5, 0x0b, 0xa0, 0xa8, 0x4b, 0xb6,
	0x0b, 0xd5, 0xc6, 0x65, 0xa2, 0x9d, 0xaf, 0x49, 0x67, 0x74, 0x8d, 0xa0, 0xd4, 0x8e, 0x94, 0xc4,
	0x9b, 0x07, 0x8a, 0x7a, 0xdf, 0xb0, 0x99, 0xd7, 0xb4, 0x6e, 0x7f, 0x82, 0xa3, 0xb7, 0x00, 0x00,
	0x00, 0xff, 0xff, 0x87, 0xd7, 0x2c, 0xc1, 0x13, 0x03, 0x00, 0x00,
}
